volumes:
  ckan_storage_dev:
  pg_data_dev:
  solr_data_dev:
  pip_cache_dev:
  site_packages_dev:
  local_bin_dev:
  home_dir_dev:

services:
  change-vol-ownership:
    # We can use any image we want as long as we can chown
    image: busybox
    # Need a user priviliged enough to chown
    user: 'root'
    # Specify the group in question
    group_add:
      - '502'
    volumes:
      # The volume to chown
      - ./src:/srv/app/src_extensions
    command: chown -R :502 /srv/app/src_extensions && chmod -R 775 /srv/app/src_extensions

  ckan-dev:
    build:
      context: ckan/
      dockerfile: Dockerfile.dev
      args:
        - TZ=UTC
    env_file:
      - .env.dev.config
      - .env.dev.secrets
    links:
      - db
      - solr
      - redis
    ports:
      - '0.0.0.0:5000:5000'
    volumes:
      - ckan_storage_dev:/var/lib/ckan
      - ./src:/srv/app/src_extensions
      - pip_cache_dev:/root/.cache/pip
      - site_packages_dev:/usr/local/lib/python3.10/site-packages
      - local_bin_dev:/usr/local/bin
      - home_dir_dev:/srv/app/
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '-qO', '/dev/null', 'http://localhost:5000']
      interval: 60s
      timeout: 10s
      retries: 3
    depends_on:
      - change-vol-ownership

  datapusher:
    image: ckan/ckan-base-datapusher:0.0.20
    env_file:
      - .env.dev.config
      - .env.dev.secrets
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '-qO', '/dev/null', 'http://localhost:8800']
      interval: 60s
      timeout: 10s
      retries: 3

  db:
    build:
      context: postgresql/
    env_file:
      - .env.dev.config
      - .env.dev.secrets
    volumes:
      - pg_data_dev:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'postgres']

  solr:
    image: ckan/ckan-solr:2.9-solr9-spatial
    volumes:
      - solr_data_dev:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '-qO', '/dev/null', 'http://localhost:8983/solr/']

  redis:
    image: redis:6
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', '-e', 'QUIT']
